Leetcode 76: Minimum Window Substring , Array -sliding window  

string minWindow(string s, string t) {
        int m=s.size(), n=t.size();
        unordered_map<char, int> mp;
        
        for(auto x:t)mp[x]++;
        
        int ans = INT_MAX; 
        int start = 0; 
        int count = mp.size();
        
        int i = 0, j = 0;
        while (j < s.length()) {
            mp[s[j]]--;
            if (mp[s[j]] == 0)count--;

            if (count == 0) {
                while (count == 0) {     //  possible answers.window found , move i to find smaller 
                    if (ans > j - i + 1) {
                        ans = j - i + 1;
                        start = i;// Starting index of the window of ans
                    }
                    mp[s[i]]++;//we are again checking in map even if mp[s[i]]==0
                    //it is telling that we will discard that extra char taken when the min length string is founded;
                    if (mp[s[i]] > 0)count++;
                    i++;
                }
            }
            j++;
        }
        
        if (ans != INT_MAX)
            return s.substr(start, ans);
        else
            return "";
    }
