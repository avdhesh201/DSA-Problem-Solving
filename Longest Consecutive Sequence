Leetcode 128: Longest Consecutive Sequence

//TLE  , still  good for interviews  on on 

int longestConsecutive(vector<int>& nums) {
        int n = nums.size(), ans=0;
        if(n==0)return 0 ;
        unordered_set<int>set;
        for( auto x: nums)set.insert(x);
        for( int i =0 ;i< n ;i++){
            int count=0;
            int start=nums[i];
            if(set.find(start-1)!=set.end())continue;
            else {
                while(set.find(start)!=set.end()){
                    start++;
                    count++;
                }
            } 
            ans=max(ans, count);
        }
        return ans;
    }
--------------------------------------------------------------------------------------------


// sequence len = count 
// nums[i-1]= last smaller , nlogn, o1

    int longestConsecutive(vector<int>& nums) {
       int n = nums.size();
		if(n == 0) return 0;
		sort(nums.begin(), nums.end());
        int sequencelen =1;
        int maxlen=1;
        for(int i=1;i<n;i++){
            if(nums[i]==nums[i-1]+1) //sequence exist
            {
                sequencelen++;
               
            }  
            else if (nums[i]==nums[i-1])continue;
            else{
                sequencelen=1;  
            }
            maxlen=max(maxlen,sequencelen);
        }
        return maxlen;  
    }
