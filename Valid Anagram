Leetcode 242: Valid Anagram, Array - Hashing 

  bool isAnagram(string s, string t) {
        unordered_map<char,int>m; // it store key value
        for(auto a :s) m[a]++;
        for(auto a :t) m[a]--;
        for(auto a :m){
            if(a.second!=0) return 0;    
        }
        return 1;
    }


bool isAnagram(string s, string t) {
    if (s.size() != t.size()) return false; // If sizes are different, they can't be anagrams
    
    int count[26] = {0}; // Array to store frequency of characters
    
    for (char c : s) count[c - 'a']++;  // Increment count for characters in s
    for (char c : t) count[c - 'a']--;  // Decrement count for characters in t
    
    for (int i = 0; i < 26; i++) {
        if (count[i] != 0) return false; // If any count is non-zero, return false
    }
    
    return true; // All counts are zero, so s and t are anagrams
}


bool isAnagram(string s, string t) {
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        if(s==t) return 1;
        else return 0; 
    }
